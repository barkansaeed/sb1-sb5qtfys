rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidProject() {
      let requiredFields = ['title', 'description', 'imageUrl', 'category'];
      let data = request.resource.data;
      
      return data.keys().hasAll(requiredFields) &&
        data.title is string && data.title.size() > 0 &&
        data.description is string && data.description.size() > 0 &&
        data.imageUrl is string && data.imageUrl.matches('https://.*') &&
        data.category in ['simple', 'medium', 'complex'];
    }

    // Projects collection rules
    match /projects/{projectId} {
      allow read: if true;
      allow create: if isAdmin() && isValidProject();
      allow update: if isAdmin() && isValidProject();
      allow delete: if isAdmin();
    }

    // Admins collection rules
    match /admins/{userId} {
      allow read: if isAuthenticated();
      allow write: if false; // Admin records managed through Firebase Console only
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId);
    }
  }
}