rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    match /portfolio/{fileName} {
      // Helper functions
      function isValidImage() {
        return request.resource.contentType.matches('image/.*') &&
               request.resource.size < 5 * 1024 * 1024 && // 5MB max
               request.resource.contentType.matches('image/(jpeg|png|webp)');
      }

      function isAuthenticated() {
        return request.auth != null;
      }

      function isAdmin() {
        return isAuthenticated() &&
          firestore.exists(/databases/(default)/documents/admins/$(request.auth.uid));
      }

      // Rules
      allow read: if true;
      allow create: if isAdmin() && isValidImage();
      allow update: if isAdmin() && isValidImage();
      allow delete: if isAdmin();
    }
  }
}